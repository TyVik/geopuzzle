# Generated by Django 2.0.3 on 2018-05-20 07:59

from django.db import migrations


def fix_level(apps, schema):
    Region = apps.get_model('maps', 'region')
    for region in Region.objects.exclude(osm_data__level__in=[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]).iterator():
        level = region.osm_data.get('level')
        if level is None:
            print(f'{region}: set 1')
            region.osm_data['level'] = 1
        else:
            print(f'{region}: set {int(level)}')
            region.osm_data['level'] = int(level)
        region.save()


def fix_infobox(apps, schema):
    RegionTranslation = apps.get_model('maps', 'regiontranslation')
    for trans in RegionTranslation.objects.filter(infobox__name__isnull=True).iterator():
        print(f'{trans}: fix translation')
        if trans.name in ('', None):
            trans.name = trans.master.title
        trans.infobox['name'] = trans.name
        trans.save()


class Migration(migrations.Migration):

    dependencies = [
        ('maps', '0003_auto_20180311_1734'),
    ]

    operations = [
        migrations.RunPython(fix_level),
        migrations.RunPython(fix_infobox),
        migrations.RunSQL("delete from maps_region_translation where master_id in (select id from maps_region where (osm_data->>'level')::int > 7)"),
        migrations.RunSQL("delete from maps_region where (osm_data->>'level')::int > 7")
    ]
