version: 2
jobs:
  build:
    docker:
    - image: tyvik/geopuzzle:jsbuild
      environment:
        NODE_ENV: "production"
        SENTRY_ORG: "geopuzzle"
        SENTRY_PROJECT: "geopuzzle"
    working_directory: ~/repo
    steps:
      - checkout
      - run: mv /node_modules /root/repo
      - run: npm run build
      - store_artifacts:
          path: static/js
          destination: bundles

  jest:
    docker:
    - image: tyvik/geopuzzle:jsbuild
      environment:
        NODE_ENV: "production"
    working_directory: ~/repo
    steps:
      - checkout
      - run: mv /node_modules /root/repo
      - run: npm run test

  django:
    docker:
      - image: tyvik/geopuzzle:app
        environment:
          DJANGO_SETTINGS_MODULE: "mercator.settings.circleci"
          DB_HOST: localhost
          DB_PORT: 5432
          DB_NAME: geopuzzle
          DB_USER: geopuzzle
          DB_USER_PASSWORD: geopuzzle
          REDIS_HOST: localhost
      - image: circleci/postgres:9.6-postgis-ram
        environment:
          POSTGRES_USER: geopuzzle
          POSTGRES_DB: geopuzzle
          POSTGRES_PASSWORD: geopuzzle
      - image: circleci/redis:4.0.9
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 30s
      - run:
          name: Run tests
          command: coverage run --source='.' manage.py test
      - run:
          name: Collect coverage
          command: |
            coverage report
            coverage xml
            coveralls

  sonarqube:
    docker:
    - image: dmoscrop/circleci-sonar-scanner-docker
    working_directory: ~/repo
    steps:
      - checkout
      - run: run-sonar-scanner

  deploy:
    docker:
      - image: tyvik/geopuzzle:app
    working_directory: ~/repo
    steps:
      - checkout
      - add_ssh_keys:
          fngerprints:
           - "c7:1f:fb:eb:c0:79:6b:c9:f7:71:62:d6:f5:c0:d5:e7"
      - run:
          name: Upload static
          command: |
            python manage.py collectstatic --noinput
            python manage.py deploystatic
      - run:
          name: Update server
          command: ssh -o "StrictHostKeyChecking no" $SSH_USER@$SSH_HOST "cd /home/tyvik/geopuzzle/ && .circleci/update.sh"

workflows:
  version: 2
  release:
    jobs:
      - build:
          filters:
            branches:
              only: master
      - django:
          requires:
            - build
          filters:
            branches:
              only: master
      - jest:
          requires:
            - build
          filters:
            branches:
              only: master
      - sonarqube:
          requires:
            - django
            - jest
          filters:
            branches:
              only: master
      - deploy:
          requires:
            - django
            - jest
          filters:
            branches:
              only: master

  development:
    jobs:
      - build:
          filters:
            branches:
              ignore: master
      - django:
          requires:
            - build
          filters:
            branches:
              ignore: master
      - jest:
          requires:
            - build
          filters:
            branches:
              ignore: master
      - sonarqube:
          requires:
            - django
            - jest
          filters:
            branches:
              ignore: master
