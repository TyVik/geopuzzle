[project]
name = "geopuzzle"
version = "0.2.0"
description = ""
authors = [
    {name = "TyVik", email = "geopuzzle@tyvik.ru"}
]
license = {text = "MIT"}
requires-python = ">=3.11"

dependencies = [
    "boto3",
    "channels",
    "channels-redis",
    "daphne",
    "django==3.2.22",
    "django-admin-autocomplete-filter",
    "django-admirarchy",
    "django-dotenv",
    "django-enumfield",
    "django-filter",
    "django-json-widget",
    "django-redis",
    "django-redis-sessions",
    "django-settings-export",
    "django-storages",
    "gunicorn",
    "psycopg2-binary",
    "pillow",
    "requests",
    "sentry-sdk",
    "social-auth-app-django",
    "sorl-thumbnail",
    "sparqlwrapper",
    "tqdm"
]

readme = "README.md"

[project.urls]
Homepage = "https://geopuzzle.org"
Repository = "https://github.com/tyvik/geopuzzle"

[project.scripts]
pdm = "pdm.core:main"

[tool.pdm.scripts]
_.env_file = ".env"

[tool.pdm.dev-dependencies]
lint = [
    "mypy",
    "django-stubs",
    "pylint",
    "pylint-django",
    "ruff"
]
test = [
    "codecov",
    "factory-boy"
]
develop = [
    "django-extensions",
    "gprof2dot",
    "pdm-django"
]

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.mypy]
check_untyped_defs = true
ignore_missing_imports = true
strict_equality = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unreachable = true
mypy_path = ["./"]
linecount_report = ".typecov/report"

[tool.mypy.plugins.django-stubs]
django_settings_module = "mercator.settings.circleci"

[tool.mypy.plugins.mypy_django_plugin.main]

[tool.coverage.run]
omit = [
    "*/migrations/*",
    "mercator/settings/*",
    "manage.py",
    "*/apps.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __str__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:"
]

[tool.pylint.MASTER]
ignore = ["CVS", "commands", "migrations"]
jobs = 0
load-plugins = ["pylint_django"]
django-settings-module = "mercator.settings.circleci"

[tool.pylint."MESSAGES CONTROL"]
disable = [
    "missing-function-docstring",
    "missing-class-docstring",
    "missing-module-docstring",
    "too-few-public-methods",
    "no-member",
    "unsubscriptable-object",
    "unused-wildcard-import",
    "wildcard-import",
    "consider-using-f-string"
]
enable = ["c-extension-no-member"]

[tool.pylint.REFACTORING]
never-returning-functions = ["sys.exit"]

[tool.pylint.VARIABLES]
ignored-argument-names = "_.*|^ignored_|^unused_|args|kwargs"

[tool.pylint.FORMAT]
expected-line-ending-format = "LF"
max-line-length = 120

[tool.pylint.TYPECHECK]
ignored-modules = []

[tool.pylint.BASIC]
const-naming-style = "any"
good-names = ["i", "j", "k", "ex", "Run", "_", "pk", "x", "y", "id", "logger"]

[tool.pylint.SIMILARITIES]
ignore-imports = false

[tool.pylint.IMPORTS]
deprecated-modules = ["optparse", "tkinter.tix"]

[tool.ruff]
line-length = 120
target-version = "py311"
exclude = [
    ".git",
    ".mypy_cache",
    ".ruff_cache",
    "__pypackages__",
    "node_modules",
    "migrations",
    "pgdata",
    "settings"
]